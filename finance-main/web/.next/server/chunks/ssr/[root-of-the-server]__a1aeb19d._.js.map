{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/assets/logo.svg.mjs%20%28structured%20image%20object%29"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 512, height: 512, blurDataURL: null, blurWidth: 0, blurHeight: 0 }\n"],"names":[],"mappings":";;;AAAA;;uCACe;IAAE,KAAA,8GAAA,CAAA,UAAG;IAAE,OAAO;IAAK,QAAQ;IAAK,aAAa;IAAM,WAAW;IAAG,YAAY;AAAE","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/components/header.tsx"],"sourcesContent":["import { CirclePlus } from \"lucide-react\";\r\nimport Image from 'next/image'\r\nimport LogoImage from '../assets/logo.svg'\r\n\r\nexport function Header() {\r\n  return (\r\n    <header style={{\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"100%\",\r\n    }}>\r\n       <Image\r\n      src={LogoImage}\r\n      width={40}\r\n      height={40}\r\n      alt=\"Picture of the author\"\r\n    />\r\n      <button style={{\r\n        color: \"#000000\",\r\n        backgroundColor: \"#10B981\",\r\n        border: \"none\",\r\n        borderRadius: \"8px\",\r\n        \r\n      }}>\r\n        <CirclePlus />\r\n      </button>\r\n    </header>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,OAAO;YACb,SAAS;YACT,gBAAgB;YAChB,OAAO;QACT;;0BACG,8OAAC,6HAAA,CAAA,UAAK;gBACP,KAAK,0QAAA,CAAA,UAAS;gBACd,OAAO;gBACP,QAAQ;gBACR,KAAI;;;;;;0BAEJ,8OAAC;gBAAO,OAAO;oBACb,OAAO;oBACP,iBAAiB;oBACjB,QAAQ;oBACR,cAAc;gBAEhB;0BACE,cAAA,8OAAC,kNAAA,CAAA,aAAU;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/components/transactions/transactions-table.tsx"],"sourcesContent":["import * as lucide from \"lucide-react\";\r\nimport transactions from \"../../assets/transactions.json\" with { type: \"json\" };\r\nimport React from \"react\";\r\n\r\n\r\ntype Transaction = typeof transactions[0];\r\n\r\nexport function TransactionTable() {\r\n  const hasScroll = transactions.length > 1; \r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"1rem\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <h3 style={{ color: \"#fff\", fontSize: \"1.5rem\", fontWeight: \"bold\" }}> \r\n      Transações</h3>\r\n      <div\r\n        className=\"scrollHidden\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"1rem\",\r\n          width: \"100%\",\r\n          overflowY: hasScroll ? \"auto\" : \"hidden\",\r\n          height: \"300px\", \r\n          \r\n          \r\n        }}\r\n      >\r\n        <table\r\n          style={{\r\n            borderCollapse: \"separate\",\r\n            width: \"100%\",\r\n            \r\n          }}\r\n        >\r\n          <thead>\r\n            <tr\r\n              style={{\r\n                textAlign: \"center\",\r\n                  color: \"#666\",\r\n                  fontWeight: \"bold\",\r\n                  padding: \"0.5rem\",\r\n                  position: \"sticky\", \r\n                  top: 0, \r\n                  backgroundColor: \"#27272A\", \r\n                  zIndex: 1, \r\n              }}>\r\n              <th>\r\n                Icone\r\n              </th>\r\n              <th>\r\n                Descrição\r\n              </th>\r\n              <th>\r\n                Tipo\r\n              </th>\r\n              <th>\r\n                Valor\r\n              </th>\r\n              <th>\r\n                Banco\r\n              </th>\r\n              <th>\r\n                Data\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map((transaction: Transaction) => (\r\n              <tr\r\n                key={transaction.id}\r\n                style={{\r\n                  \r\n                  borderRadius: \"8px\",\r\n                  boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n                  color: \"#fff\",\r\n                  textAlign: \"center\",\r\n                  \r\n                  padding: \"0.5rem\",\r\n                  \r\n                }}\r\n              >\r\n                <td>\r\n                  {transaction.category.icon in lucide\r\n                    ? React.createElement(\r\n                        lucide[transaction.category.icon as keyof typeof lucide] as React.ElementType\r\n                      )\r\n                    : null}\r\n                </td>\r\n                <td>\r\n                  {transaction.description}\r\n                </td>\r\n                <td>\r\n                  {transaction.type === \"income\" ? \"Entrada\" : \"Saída\"}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    color: transaction.type === \"income\" ? \"#4ADE80\" : \"#EF4444\", // Verde para entrada, vermelho para saída\r\n                  }}\r\n                >\r\n                  {transaction.amount.toLocaleString(\"pt-BR\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  })}\r\n                </td>\r\n                <td>\r\n                  {transaction.bank}\r\n                </td>\r\n                <td>\r\n                  {new Date(transaction.date).toLocaleString(\"pt-BR\")}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAKO,SAAS;IACd,MAAM,YAAY,qGAAA,CAAA,UAAY,CAAC,MAAM,GAAG;IAExC,qBACE,8OAAC;QACC,OAAO;YACL,SAAS;YACT,eAAe;YACf,KAAK;YACL,OAAO;YACP,QAAQ;QACV;;0BAEA,8OAAC;gBAAG,OAAO;oBAAE,OAAO;oBAAQ,UAAU;oBAAU,YAAY;gBAAO;0BAAG;;;;;;0BAEtE,8OAAC;gBACC,WAAU;gBACV,OAAO;oBACL,SAAS;oBACT,eAAe;oBACf,KAAK;oBACL,OAAO;oBACP,WAAW,YAAY,SAAS;oBAChC,QAAQ;gBAGV;0BAEA,cAAA,8OAAC;oBACC,OAAO;wBACL,gBAAgB;wBAChB,OAAO;oBAET;;sCAEA,8OAAC;sCACC,cAAA,8OAAC;gCACC,OAAO;oCACL,WAAW;oCACT,OAAO;oCACP,YAAY;oCACZ,SAAS;oCACT,UAAU;oCACV,KAAK;oCACL,iBAAiB;oCACjB,QAAQ;gCACZ;;kDACA,8OAAC;kDAAG;;;;;;kDAGJ,8OAAC;kDAAG;;;;;;kDAGJ,8OAAC;kDAAG;;;;;;kDAGJ,8OAAC;kDAAG;;;;;;kDAGJ,8OAAC;kDAAG;;;;;;kDAGJ,8OAAC;kDAAG;;;;;;;;;;;;;;;;;sCAKR,8OAAC;sCACE,qGAAA,CAAA,UAAY,CAAC,GAAG,CAAC,CAAC,4BACjB,8OAAC;oCAEC,OAAO;wCAEL,cAAc;wCACd,WAAW;wCACX,OAAO;wCACP,WAAW;wCAEX,SAAS;oCAEX;;sDAEA,8OAAC;sDACE,YAAY,QAAQ,CAAC,IAAI,IAAI,kLAC1B,qMAAA,CAAA,UAAK,CAAC,aAAa,CACjB,iKAAM,CAAC,YAAY,QAAQ,CAAC,IAAI,CAAwB,IAE1D;;;;;;sDAEN,8OAAC;sDACE,YAAY,WAAW;;;;;;sDAE1B,8OAAC;sDACE,YAAY,IAAI,KAAK,WAAW,YAAY;;;;;;sDAE/C,8OAAC;4CACC,OAAO;gDACL,OAAO,YAAY,IAAI,KAAK,WAAW,YAAY;4CACrD;sDAEC,YAAY,MAAM,CAAC,cAAc,CAAC,SAAS;gDAC1C,OAAO;gDACP,UAAU;4CACZ;;;;;;sDAEF,8OAAC;sDACE,YAAY,IAAI;;;;;;sDAEnB,8OAAC;sDACE,IAAI,KAAK,YAAY,IAAI,EAAE,cAAc,CAAC;;;;;;;mCAvCxC,YAAY,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDnC","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/app/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { CardSummary } from \"@/components/card-summary\";\r\nimport { Category } from \"@/components/transactions/category/category\";\r\nimport { ChartAnalyze } from \"@/components/chart-analyze\";\r\nimport { Header } from \"@/components/header\";\r\nimport { TransactionTable } from \"@/components/transactions/transactions-table\";\r\nimport { Banknote, BanknoteArrowDown, BanknoteArrowUp, Car, CircleEllipsis, Hamburger, Pill, TreePalm } from \"lucide-react\";\r\n\r\n\r\nconst categories = [\r\n  {\r\n    id: \"1\",\r\n    icon: Hamburger,\r\n    name: \"Alimentação\",\r\n    quantity: 10,\r\n    amount: 100,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    icon: Car,\r\n    name: \"Transporte\",\r\n    quantity: 5,\r\n    amount: 50,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    icon: TreePalm,\r\n    name: \"Lazer\",\r\n    quantity: 3,\r\n    amount: 30,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    icon: Pill,\r\n    name: \"Saúde\",\r\n    quantity: 2,\r\n    amount: 20,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    icon: CircleEllipsis,\r\n    name: \"Educação\",\r\n    quantity: 1,\r\n    amount: 10,\r\n  },  \r\n]\r\n\r\n\r\nconst cards = [\r\n  {\r\n    icon: BanknoteArrowDown,\r\n    title: \"Entradas\",\r\n    amount: 7840.56,\r\n    description: \"Soma de todas as entradas do período\",\r\n  },\r\n  {\r\n    icon: BanknoteArrowUp,\r\n    title: \"Saídas\",\r\n    amount: 1580.45,\r\n    description: \"Soma de todas as saídas do período\",\r\n  },\r\n  {\r\n    icon: Banknote,\r\n    title: \"Balanço\",\r\n    amount: 6260.11,\r\n    description: \"Soma de todas as entradas e saídas do período\",\r\n  }\r\n]\r\n\r\nexport default function Home() {\r\n\r\n\r\n  return (\r\n   <main style={{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"1rem\",\r\n    justifyContent: \"start\",\r\n    alignItems: \"start\",\r\n    height: \"100vh\",\r\n    maxWidth: \"1000px\",\r\n    width: \"100%\",\r\n    margin: \"0 auto\",\r\n    padding: \"1rem\"\r\n   }}>\r\n    <Header/>\r\n    <section style={{\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      gap: \"1rem\",\r\n      width: \"100%\",\r\n    }}>\r\n      {cards.map((card) => (\r\n        <CardSummary key={card.title} card={card}/>\r\n      ))}\r\n    </section>\r\n\r\n    <section style={{\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      gap: \"1rem\",\r\n      width: \"100%\",\r\n    }}>\r\n      <ChartAnalyze/>\r\n      <Category categories={categories}/>\r\n    </section>\r\n\r\n    <section style={{\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      gap: \"1rem\",\r\n      width: \"100%\",\r\n    }}>\r\n      <TransactionTable />\r\n    </section>\r\n   </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;;;;;;;;AAUA,MAAM,aAAa;IACjB;QACE,IAAI;QACJ,MAAM,4MAAA,CAAA,YAAS;QACf,MAAM;QACN,UAAU;QACV,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM,gMAAA,CAAA,MAAG;QACT,MAAM;QACN,UAAU;QACV,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM,8MAAA,CAAA,WAAQ;QACd,MAAM;QACN,UAAU;QACV,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM,kMAAA,CAAA,OAAI;QACV,MAAM;QACN,UAAU;QACV,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM,0NAAA,CAAA,iBAAc;QACpB,MAAM;QACN,UAAU;QACV,QAAQ;IACV;CACD;AAGD,MAAM,QAAQ;IACZ;QACE,MAAM,oOAAA,CAAA,oBAAiB;QACvB,OAAO;QACP,QAAQ;QACR,aAAa;IACf;IACA;QACE,MAAM,gOAAA,CAAA,kBAAe;QACrB,OAAO;QACP,QAAQ;QACR,aAAa;IACf;IACA;QACE,MAAM,0MAAA,CAAA,WAAQ;QACd,OAAO;QACP,QAAQ;QACR,aAAa;IACf;CACD;AAEc,SAAS;IAGtB,qBACC,8OAAC;QAAK,OAAO;YACZ,SAAS;YACT,eAAe;YACf,KAAK;YACL,gBAAgB;YAChB,YAAY;YACZ,QAAQ;YACR,UAAU;YACV,OAAO;YACP,QAAQ;YACR,SAAS;QACV;;0BACC,8OAAC,4HAAA,CAAA,SAAM;;;;;0BACP,8OAAC;gBAAQ,OAAO;oBACd,SAAS;oBACT,eAAe;oBACf,KAAK;oBACL,OAAO;gBACT;0BACG,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;wBAA6B,MAAM;uBAAlB,KAAK,KAAK;;;;;;;;;;0BAIhC,8OAAC;gBAAQ,OAAO;oBACd,SAAS;oBACT,eAAe;oBACf,KAAK;oBACL,OAAO;gBACT;;kCACE,8OAAC;;;;;kCACD,8OAAC;wBAAS,YAAY;;;;;;;;;;;;0BAGxB,8OAAC;gBAAQ,OAAO;oBACd,SAAS;oBACT,eAAe;oBACf,KAAK;oBACL,OAAO;gBACT;0BACE,cAAA,8OAAC,2JAAA,CAAA,mBAAgB;;;;;;;;;;;;;;;;AAIvB","debugId":null}}]
}