{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/components/card-summary.tsx"],"sourcesContent":["import { LucideIcon } from \"lucide-react\";\r\n\r\ninterface CardSummaryProps {\r\n  card: {\r\n    icon: LucideIcon;\r\n     title: string;\r\n    amount: number;\r\n    description: string;\r\n  }\r\n}\r\nexport function CardSummary(props: CardSummaryProps) {\r\n  const { card } = props\r\n  const { title, amount, description } = card\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"1rem\",\r\n        width: \"100%\",\r\n        maxHeight: \"300px\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          padding: \"1rem\",\r\n          gap: \"1rem\",\r\n          backgroundColor: \"#f5f5f5\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <div style={{ \r\n          display: \"flex\",\r\n          width: \"100%\",\r\n          justifyContent: \"space-between\",\r\n        }}>\r\n          <span>{title}</span>\r\n         {card.icon && <card.icon />}\r\n\r\n        </div>\r\n        <div style={{\r\n          display: \"flex\",\r\n          width: \"100%\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          fontSize: \"1.5rem\",\r\n          fontWeight: \"bold\",\r\n          marginTop: \"0.5rem\",\r\n        }}>\r\n          <span>R$ {amount}</span>\r\n        </div>\r\n        <div style={{\r\n          display: \"flex\",\r\n          width: \"100%\",\r\n        }}>\r\n          <p style={{\r\n            fontSize: \"0.7rem\",\r\n            color: \"#666\",\r\n            textAlign: \"left\",\r\n          }}>{description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAUO,SAAS,YAAY,KAAuB;IACjD,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG;IAEvC,qBACE,6LAAC;QACC,OAAO;YACL,SAAS;YACT,eAAe;YACf,KAAK;YACL,OAAO;YACP,WAAW;YACX,QAAQ;QACV;kBAEA,cAAA,6LAAC;YACC,OAAO;gBACL,SAAS;gBACT,eAAe;gBACf,gBAAgB;gBAChB,YAAY;gBACZ,SAAS;gBACT,KAAK;gBACL,iBAAiB;gBACjB,cAAc;gBACd,WAAW;gBACX,QAAQ;YACV;;8BAEA,6LAAC;oBAAI,OAAO;wBACV,SAAS;wBACT,OAAO;wBACP,gBAAgB;oBAClB;;sCACE,6LAAC;sCAAM;;;;;;wBACP,KAAK,IAAI,kBAAI,6LAAC,KAAK,IAAI;;;;;;;;;;;8BAGzB,6LAAC;oBAAI,OAAO;wBACV,SAAS;wBACT,OAAO;wBACP,gBAAgB;wBAChB,YAAY;wBACZ,UAAU;wBACV,YAAY;wBACZ,WAAW;oBACb;8BACE,cAAA,6LAAC;;4BAAK;4BAAI;;;;;;;;;;;;8BAEZ,6LAAC;oBAAI,OAAO;wBACV,SAAS;wBACT,OAAO;oBACT;8BACE,cAAA,6LAAC;wBAAE,OAAO;4BACR,UAAU;4BACV,OAAO;4BACP,WAAW;wBACb;kCAAI;;;;;;;;;;;;;;;;;;;;;;AAKd;KA9DgB","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/components/category.tsx"],"sourcesContent":["import { type LucideIcon } from \"lucide-react\";\r\n\r\ninterface CategoryProps {\r\n  categories: {\r\n    id: string;\r\n    icon: LucideIcon;\r\n    name: string;\r\n    quantity: number;\r\n    amount: number;\r\n  }[]\r\n}\r\nexport function Category(props: CategoryProps) {\r\n  const { categories } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"1rem\",\r\n        maxWidth: \"350px\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <h3>Categorias</h3>\r\n      <div style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"1rem\",\r\n        padding: \"1rem\",\r\n        backgroundColor: \"#f0f0f0\",\r\n        borderRadius: \"8px\",\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n        overflowY: \"auto\",\r\n        height: \"100%\",\r\n      }}>\r\n        {categories.map((cat) => (\r\n          <div\r\n            key={cat.id}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"0.5rem 1rem\",\r\n              borderRadius: \"0.5rem\",\r\n              backgroundColor: \"#f0f0f0\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\", gap: \"0.5rem\", alignItems: \"center\", minWidth: 0 }}>\r\n              {cat.icon && <cat.icon />}\r\n              <span>{cat.name}</span>\r\n            </div>\r\n            <span style={{ minWidth: 32, textAlign: \"center\" }}>{cat.quantity}</span>\r\n            <span style={{ minWidth: 48, textAlign: \"right\" }}>{cat.amount}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAWO,SAAS,SAAS,KAAoB;IAC3C,MAAM,EAAE,UAAU,EAAE,GAAG;IACvB,qBACE,6LAAC;QACC,OAAO;YACL,SAAS;YACT,eAAe;YACf,KAAK;YACL,UAAU;YACV,OAAO;YACP,QAAQ;QACV;;0BAEA,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;gBAAI,OAAO;oBACV,SAAS;oBACT,eAAe;oBACf,KAAK;oBACL,SAAS;oBACT,iBAAiB;oBACjB,cAAc;oBACd,WAAW;oBACX,WAAW;oBACX,QAAQ;gBACV;0BACG,WAAW,GAAG,CAAC,CAAC,oBACf,6LAAC;wBAEC,OAAO;4BACL,SAAS;4BACT,eAAe;4BACf,gBAAgB;4BAChB,YAAY;4BACZ,SAAS;4BACT,cAAc;4BACd,iBAAiB;wBACnB;;0CAEA,6LAAC;gCAAI,OAAO;oCAAE,SAAS;oCAAQ,KAAK;oCAAU,YAAY;oCAAU,UAAU;gCAAE;;oCAC7E,IAAI,IAAI,kBAAI,6LAAC,IAAI,IAAI;;;;;kDACtB,6LAAC;kDAAM,IAAI,IAAI;;;;;;;;;;;;0CAEjB,6LAAC;gCAAK,OAAO;oCAAE,UAAU;oCAAI,WAAW;gCAAS;0CAAI,IAAI,QAAQ;;;;;;0CACjE,6LAAC;gCAAK,OAAO;oCAAE,UAAU;oCAAI,WAAW;gCAAQ;0CAAI,IAAI,MAAM;;;;;;;uBAhBzD,IAAI,EAAE;;;;;;;;;;;;;;;;AAsBvB;KAjDgB","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/components/chart-analyze.tsx"],"sourcesContent":["import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport transactions from \"../../assets/transactions.json\" with { type: \"json\" };\r\n\r\n// Definir o tipo Transaction baseado na estrutura do seu JSON\r\ntype Transaction = typeof transactions[0] & { date: string }; // Certifique-se que 'date' está no tipo\r\n\r\n// Função para obter o nome do mês a partir de uma data (ex: \"2023-05-15\" -> \"Maio\")\r\nconst getMonthName = (dateString: string) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleString('pt-BR', { month: 'long' });\r\n};\r\n\r\n// Função para obter o número do mês para ordenação (0 = Janeiro, 1 = Fevereiro, ...)\r\nconst getMonthNumber = (dateString: string) => {\r\n  return new Date(dateString).getMonth();\r\n}\r\n\r\nexport function ChartAnalyze() {\r\n  // Processar os dados de transações para obter os gastos por mês\r\n  const monthlySpendingData = transactions\r\n    .filter((transaction: Transaction) => transaction.type === \"expense\")\r\n    .reduce((acc, transaction) => {\r\n      const monthName = getMonthName(transaction.date);\r\n      const monthNumber = getMonthNumber(transaction.date); // Para ordenação\r\n      const amount = transaction.amount;\r\n\r\n      const existingMonth = acc.find(item => item.month === monthName);\r\n\r\n      if (existingMonth) {\r\n        existingMonth.Gasto += amount;\r\n      } else {\r\n        acc.push({ month: monthName, Gasto: amount, monthOrder: monthNumber });\r\n      }\r\n      return acc;\r\n    }, [] as { month: string; Gasto: number; monthOrder: number }[])\r\n    .sort((a, b) => a.monthOrder - b.monthOrder); // Ordena os meses cronologicamente\r\n\r\n  return (\r\n    <div style={{\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"1rem\",\r\n      width: \"100%\",\r\n    }}>\r\n      <h3\r\n      style={{\r\n        color: \"#fff\",\r\n        fontSize: \"1.5rem\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n      >Análise de Gastos por Mês</h3> {/* Título atualizado */}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"95%\",\r\n          height: \"300px\",\r\n          backgroundColor: \"#09090B\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n          padding: \"1rem\",\r\n        }}\r\n      >\r\n        {monthlySpendingData.length > 0 ? (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n              data={monthlySpendingData} // Usar os dados de gastos mensais\r\n              margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 5,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\r\n              <XAxis dataKey=\"month\" stroke=\"#9CA3AF\" /> {/* 'month' será o nome do mês */}\r\n              <YAxis stroke=\"#9CA3AF\" />\r\n              <Tooltip\r\n                contentStyle={{ backgroundColor: \"#1F2937\", border: \"none\", borderRadius: \"4px\" }}\r\n                itemStyle={{ color: \"#E5E7EB\" }}\r\n                cursor={{ fill: 'rgba(107, 114, 128, 0.2)' }}\r\n                formatter={(value: number, name: string, props: any) => {\r\n                  // O 'name' aqui será 'Gasto', props.payload.month terá o nome do mês\r\n                  return [`R$ ${value.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`, `Gasto em ${props.payload.month}`];\r\n                }}\r\n                labelFormatter={(label: string) => `Mês: ${label}`} // O label aqui é o valor do dataKey do XAxis (mês)\r\n              />\r\n              <Bar dataKey=\"Gasto\" fill=\"#EF4444\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <p style={{ color: \"#9CA3AF\" }}>Não há dados de gastos para exibir.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAMA,oFAAoF;AACpF,MAAM,eAAe,CAAC;IACpB,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,KAAK,cAAc,CAAC,SAAS;QAAE,OAAO;IAAO;AACtD;AAEA,qFAAqF;AACrF,MAAM,iBAAiB,CAAC;IACtB,OAAO,IAAI,KAAK,YAAY,QAAQ;AACtC;AAEO,SAAS;IACd,gEAAgE;IAChE,MAAM,sBAAsB,aACzB,MAAM,CAAC,CAAC,cAA6B,YAAY,IAAI,KAAK,WAC1D,MAAM,CAAC,CAAC,KAAK;QACZ,MAAM,YAAY,aAAa,YAAY,IAAI;QAC/C,MAAM,cAAc,eAAe,YAAY,IAAI,GAAG,iBAAiB;QACvE,MAAM,SAAS,YAAY,MAAM;QAEjC,MAAM,gBAAgB,IAAI,IAAI,CAAC,CAAA,OAAQ,KAAK,KAAK,KAAK;QAEtD,IAAI,eAAe;YACjB,cAAc,KAAK,IAAI;QACzB,OAAO;YACL,IAAI,IAAI,CAAC;gBAAE,OAAO;gBAAW,OAAO;gBAAQ,YAAY;YAAY;QACtE;QACA,OAAO;IACT,GAAG,EAAE,EACJ,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,UAAU,GAAG,EAAE,UAAU,GAAG,mCAAmC;IAEnF,qBACE,6LAAC;QAAI,OAAO;YACV,SAAS;YACT,eAAe;YACf,KAAK;YACL,OAAO;QACT;;0BACE,6LAAC;gBACD,OAAO;oBACL,OAAO;oBACP,UAAU;oBACV,YAAY;gBACd;0BACC;;;;;;YAA8B;0BAC/B,6LAAC;gBACC,OAAO;oBACL,SAAS;oBACT,gBAAgB;oBAChB,YAAY;oBACZ,OAAO;oBACP,QAAQ;oBACR,iBAAiB;oBACjB,cAAc;oBACd,WAAW;oBACX,SAAS;gBACX;0BAEC,oBAAoB,MAAM,GAAG,kBAC5B,6LAAC;oBAAoB,OAAM;oBAAO,QAAO;8BACvC,cAAA,6LAAC;wBACC,MAAM;wBACN,QAAQ;4BACN,KAAK;4BACL,OAAO;4BACP,MAAM;4BACN,QAAQ;wBACV;;0CAEA,6LAAC;gCAAc,iBAAgB;gCAAM,QAAO;;;;;;0CAC5C,6LAAC;gCAAM,SAAQ;gCAAQ,QAAO;;;;;;4BAAY;0CAC1C,6LAAC;gCAAM,QAAO;;;;;;0CACd,6LAAC;gCACC,cAAc;oCAAE,iBAAiB;oCAAW,QAAQ;oCAAQ,cAAc;gCAAM;gCAChF,WAAW;oCAAE,OAAO;gCAAU;gCAC9B,QAAQ;oCAAE,MAAM;gCAA2B;gCAC3C,WAAW,CAAC,OAAe,MAAc;oCACvC,qEAAqE;oCACrE,OAAO;wCAAC,CAAC,GAAG,EAAE,MAAM,cAAc,CAAC,SAAS;4CAAE,uBAAuB;4CAAG,uBAAuB;wCAAE,IAAI;wCAAE,CAAC,SAAS,EAAE,MAAM,OAAO,CAAC,KAAK,EAAE;qCAAC;gCAC3I;gCACA,gBAAgB,CAAC,QAAkB,CAAC,KAAK,EAAE,OAAO;;;;;;0CAEpD,6LAAC;gCAAI,SAAQ;gCAAQ,MAAK;;;;;;;;;;;;;;;;yCAI9B,6LAAC;oBAAE,OAAO;wBAAE,OAAO;oBAAU;8BAAG;;;;;;;;;;;;;;;;;AAK1C;KAhFgB","debugId":null}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/assets/logo.svg.mjs%20%28structured%20image%20object%29"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 512, height: 512, blurDataURL: null, blurWidth: 0, blurHeight: 0 }\n"],"names":[],"mappings":";;;AAAA;;uCACe;IAAE,KAAA,8GAAA,CAAA,UAAG;IAAE,OAAO;IAAK,QAAQ;IAAK,aAAa;IAAM,WAAW;IAAG,YAAY;AAAE","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/components/header.tsx"],"sourcesContent":["import { CirclePlus } from \"lucide-react\";\r\nimport Image from 'next/image'\r\nimport LogoImage from '../assets/logo.svg'\r\n\r\nexport function Header() {\r\n  return (\r\n    <header style={{\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"100%\",\r\n    }}>\r\n       <Image\r\n      src={LogoImage}\r\n      width={40}\r\n      height={40}\r\n      alt=\"Picture of the author\"\r\n    />\r\n      <button style={{\r\n        color: \"#000000\",\r\n        backgroundColor: \"#10B981\",\r\n        border: \"none\",\r\n        borderRadius: \"8px\",\r\n        \r\n      }}>\r\n        <CirclePlus />\r\n      </button>\r\n    </header>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,SAAS;IACd,qBACE,6LAAC;QAAO,OAAO;YACb,SAAS;YACT,gBAAgB;YAChB,OAAO;QACT;;0BACG,6LAAC,gIAAA,CAAA,UAAK;gBACP,KAAK,6QAAA,CAAA,UAAS;gBACd,OAAO;gBACP,QAAQ;gBACR,KAAI;;;;;;0BAEJ,6LAAC;gBAAO,OAAO;oBACb,OAAO;oBACP,iBAAiB;oBACjB,QAAQ;oBACR,cAAc;gBAEhB;0BACE,cAAA,6LAAC,qNAAA,CAAA,aAAU;;;;;;;;;;;;;;;;AAInB;KAxBgB","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jhuan/OneDrive/Documentos/GitHub/progweb/finance-main/web/src/app/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { CardSummary } from \"@/components/card-summary\";\r\nimport { Category } from \"@/components/category\";\r\nimport { ChartAnalyze } from \"@/components/chart-analyze\";\r\nimport { Header } from \"@/components/header\";\r\nimport { TransactionTable } from \"@/components/transactions/transactions-table\";\r\nimport { Banknote, BanknoteArrowDown, BanknoteArrowUp, Car, CircleEllipsis, Hamburger, Pill, TreePalm } from \"lucide-react\";\r\n\r\n\r\nconst categories = [\r\n  {\r\n    id: \"1\",\r\n    icon: Hamburger,\r\n    name: \"Alimentação\",\r\n    quantity: 10,\r\n    amount: 100,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    icon: Car,\r\n    name: \"Transporte\",\r\n    quantity: 5,\r\n    amount: 50,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    icon: TreePalm,\r\n    name: \"Lazer\",\r\n    quantity: 3,\r\n    amount: 30,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    icon: Pill,\r\n    name: \"Saúde\",\r\n    quantity: 2,\r\n    amount: 20,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    icon: CircleEllipsis,\r\n    name: \"Educação\",\r\n    quantity: 1,\r\n    amount: 10,\r\n  },  \r\n]\r\n\r\n\r\nconst cards = [\r\n  {\r\n    icon: BanknoteArrowDown,\r\n    title: \"Entradas\",\r\n    amount: 7840.56,\r\n    description: \"Soma de todas as entradas do período\",\r\n  },\r\n  {\r\n    icon: BanknoteArrowUp,\r\n    title: \"Saídas\",\r\n    amount: 1580.45,\r\n    description: \"Soma de todas as saídas do período\",\r\n  },\r\n  {\r\n    icon: Banknote,\r\n    title: \"Balanço\",\r\n    amount: 6260.11,\r\n    description: \"Soma de todas as entradas e saídas do período\",\r\n  }\r\n]\r\n\r\nexport default function Home() {\r\n\r\n\r\n  return (\r\n   <main style={{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"1rem\",\r\n    justifyContent: \"start\",\r\n    alignItems: \"start\",\r\n    height: \"100vh\",\r\n    maxWidth: \"1000px\",\r\n    width: \"100%\",\r\n    margin: \"0 auto\",\r\n    padding: \"1rem\"\r\n   }}>\r\n    <Header/>\r\n    <section style={{\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      gap: \"1rem\",\r\n      width: \"100%\",\r\n    }}>\r\n      {cards.map((card) => (\r\n        <CardSummary key={card.title} card={card}/>\r\n      ))}\r\n    </section>\r\n\r\n    <section style={{\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      gap: \"1rem\",\r\n      width: \"100%\",\r\n    }}>\r\n      <ChartAnalyze/>\r\n      <Category categories={categories}/>\r\n    </section>\r\n\r\n    <section style={{\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      gap: \"1rem\",\r\n      width: \"100%\",\r\n    }}>\r\n      <TransactionTable />\r\n    </section>\r\n   </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;;;;;;;;AAUA,MAAM,aAAa;IACjB;QACE,IAAI;QACJ,MAAM,+MAAA,CAAA,YAAS;QACf,MAAM;QACN,UAAU;QACV,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM,mMAAA,CAAA,MAAG;QACT,MAAM;QACN,UAAU;QACV,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM,iNAAA,CAAA,WAAQ;QACd,MAAM;QACN,UAAU;QACV,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM,qMAAA,CAAA,OAAI;QACV,MAAM;QACN,UAAU;QACV,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM,6NAAA,CAAA,iBAAc;QACpB,MAAM;QACN,UAAU;QACV,QAAQ;IACV;CACD;AAGD,MAAM,QAAQ;IACZ;QACE,MAAM,uOAAA,CAAA,oBAAiB;QACvB,OAAO;QACP,QAAQ;QACR,aAAa;IACf;IACA;QACE,MAAM,mOAAA,CAAA,kBAAe;QACrB,OAAO;QACP,QAAQ;QACR,aAAa;IACf;IACA;QACE,MAAM,6MAAA,CAAA,WAAQ;QACd,OAAO;QACP,QAAQ;QACR,aAAa;IACf;CACD;AAEc,SAAS;IAGtB,qBACC,6LAAC;QAAK,OAAO;YACZ,SAAS;YACT,eAAe;YACf,KAAK;YACL,gBAAgB;YAChB,YAAY;YACZ,QAAQ;YACR,UAAU;YACV,OAAO;YACP,QAAQ;YACR,SAAS;QACV;;0BACC,6LAAC,+HAAA,CAAA,SAAM;;;;;0BACP,6LAAC;gBAAQ,OAAO;oBACd,SAAS;oBACT,eAAe;oBACf,KAAK;oBACL,OAAO;gBACT;0BACG,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC,wIAAA,CAAA,cAAW;wBAAkB,MAAM;uBAAlB,KAAK,KAAK;;;;;;;;;;0BAIhC,6LAAC;gBAAQ,OAAO;oBACd,SAAS;oBACT,eAAe;oBACf,KAAK;oBACL,OAAO;gBACT;;kCACE,6LAAC,yIAAA,CAAA,eAAY;;;;;kCACb,6LAAC,iIAAA,CAAA,WAAQ;wBAAC,YAAY;;;;;;;;;;;;0BAGxB,6LAAC;gBAAQ,OAAO;oBACd,SAAS;oBACT,eAAe;oBACf,KAAK;oBACL,OAAO;gBACT;0BACE,cAAA,6LAAC,8JAAA,CAAA,mBAAgB;;;;;;;;;;;;;;;;AAIvB;KAhDwB","debugId":null}}]
}